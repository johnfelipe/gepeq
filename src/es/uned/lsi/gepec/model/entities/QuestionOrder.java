/* OpenMark Authoring Tool (GEPEQ)
 * Copyright (C) 2013 UNED
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
package es.uned.lsi.gepec.model.entities;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Section_question generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@SequenceGenerator(name="sections_questions_id_seq", sequenceName="sections_questions_id_seq") 
@Table(name = "sections_questions", schema = "public")
public class QuestionOrder implements java.io.Serializable {

	private long id;
	private Question question;
	private Section section;
	private int order;
	private int weight;

	public QuestionOrder() {
	}

	public QuestionOrder(long id, Question question,
			Section section, int order) {
		this.id = id;
		this.question = question;
		this.section = section;
		this.order = order;
	}

	@Id
	@GeneratedValue(generator="sections_questions_id_seq", strategy=GenerationType.AUTO)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_question", nullable = false)
	public Question getQuestion() {
		return this.question;
	}

	public void setQuestion(Question question) {
		this.question = question;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_section", nullable = false)
	public Section getSection() {
		return this.section;
	}

	public void setSection(Section section) {
		this.section = section;
	}

	@Column(name = "order_number", nullable = false)
	public int getOrder() {
		return this.order;
	}

	public void setOrder(int order) {
		this.order = order;
	}

	@Column(name = "weight", nullable = false)
	public int getWeight() {
		return this.weight;
	}

	public void setWeight(int weight) {
		this.weight = weight;
	}
	
	/**
	 * Set the fields of this question order with the values from fields from other question order.
	 * @param otherQuestionOrder Other question order
	 */
	@Transient
	public void setFromOtherQuestionOrder(QuestionOrder otherQuestionOrder)
	{
		if (otherQuestionOrder!=null)
		{
			setId(otherQuestionOrder.getId());
			setQuestion(otherQuestionOrder.getQuestion());
			setSection(otherQuestionOrder.getSection());
			setOrder(otherQuestionOrder.getOrder());
			setWeight(otherQuestionOrder.getWeight());
		}
	}
	
	@Override
	public boolean equals(Object obj)
	{
		boolean ok=false;
		if (obj instanceof QuestionOrder)
		{
			if (getId()==0L)
			{
				ok=((QuestionOrder)obj).getId()==0L && getOrder()==((QuestionOrder)obj).getOrder();
			}
			else
			{
				ok=getId()==((QuestionOrder)obj).getId();
			}
		}
		return ok;
	}
}
