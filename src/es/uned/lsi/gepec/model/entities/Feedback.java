/* OpenMark Authoring Tool (GEPEQ)
 * Copyright (C) 2013 UNED
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
package es.uned.lsi.gepec.model.entities;

// Generated 11-ene-2012 14:43:54 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Feedbacks generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@SequenceGenerator(name="feedbacks_id_seq", sequenceName="feedbacks_id_seq") 
@Table(name = "feedbacks", schema = "public")
public class Feedback implements java.io.Serializable {

	private long id;
	private Question question;
	private Resource resource;
	private FeedbackType feedbackType;
	private String text;
	private String test;
	private String answer;
	private int attemptsmin;
	private int attemptsmax;
	private int selectedanswersmin;
	private int selectedanswersmax;
	private int selectedrightanswersmin;
	private int selectedrightanswersmax;
	private int selectedwronganswersmin;
	private int selectedwronganswersmax;
	private int unselectedanswersmin;
	private int unselectedanswersmax;
	private int unselectedrightanswersmin;
	private int unselectedrightanswersmax;
	private int unselectedwronganswersmin;
	private int unselectedwronganswersmax;
	private int rightdistancemin;
	private int rightdistancemax;
	private int position;
	private int resourceWidth;
	private int resourceHeight;

	public Feedback() {
	}

	public Feedback(long id, Question question, String test,
			int attemptsmin, int attemptsmax, int selectedanswersmin,
			int selectedanswersmax, int selectedrightanswersmin,
			int selectedrightanswersmax, int selectedwronganswersmin,
			int selectedwronganswersmax, int unselectedanswersmin,
			int unselectedanswersmax, int unselectedrightanswersmin,
			int unselectedrightanswersmax, int unselectedwronganswersmin,
			int unselectedwronganswersmax, int rightdistancemin,
			int rightdistancemax, int position, int resourceWidth,
			int resourceHeight) {
		this.id = id;
		this.question = question;
		this.test = test;
		this.attemptsmin = attemptsmin;
		this.attemptsmax = attemptsmax;
		this.selectedanswersmin = selectedanswersmin;
		this.selectedanswersmax = selectedanswersmax;
		this.selectedrightanswersmin = selectedrightanswersmin;
		this.selectedrightanswersmax = selectedrightanswersmax;
		this.selectedwronganswersmin = selectedwronganswersmin;
		this.selectedwronganswersmax = selectedwronganswersmax;
		this.unselectedanswersmin = unselectedanswersmin;
		this.unselectedanswersmax = unselectedanswersmax;
		this.unselectedrightanswersmin = unselectedrightanswersmin;
		this.unselectedrightanswersmax = unselectedrightanswersmax;
		this.unselectedwronganswersmin = unselectedwronganswersmin;
		this.unselectedwronganswersmax = unselectedwronganswersmax;
		this.rightdistancemin = rightdistancemin;
		this.rightdistancemax = rightdistancemax;
		this.position = position;
		this.resourceWidth = resourceWidth;
		this.resourceHeight = resourceHeight;
	}

	public Feedback(long id, Question question, Resource resource,
			FeedbackType feedbackType, String text, String test, String answer, 
			int attemptsmin, int attemptsmax, int selectedanswersmin, int selectedanswersmax,
			int selectedrightanswersmin, int selectedrightanswersmax, int selectedwronganswersmin, 
			int selectedwronganswersmax, int unselectedanswersmin, int unselectedanswersmax,
			int unselectedrightanswersmin, int unselectedrightanswersmax, int unselectedwronganswersmin, 
			int unselectedwronganswersmax, int rightdistancemin, int rightdistancemax, 
			int position, int resourceWidth, int resourceHeight) {
		this.id = id;
		this.question = question;
		this.resource = resource;
		this.feedbackType = feedbackType;
		this.text = text;
		this.test = test;
		this.answer = answer;
		this.attemptsmin = attemptsmin;
		this.attemptsmax = attemptsmax;
		this.selectedanswersmin = selectedanswersmin;
		this.selectedanswersmax = selectedanswersmax;
		this.selectedrightanswersmin = selectedrightanswersmin;
		this.selectedrightanswersmax = selectedrightanswersmax;
		this.selectedwronganswersmin = selectedwronganswersmin;
		this.selectedwronganswersmax = selectedwronganswersmax;
		this.unselectedanswersmin = unselectedanswersmin;
		this.unselectedanswersmax = unselectedanswersmax;
		this.unselectedrightanswersmin = unselectedrightanswersmin;
		this.unselectedrightanswersmax = unselectedrightanswersmax;
		this.unselectedwronganswersmin = unselectedwronganswersmin;
		this.unselectedwronganswersmax = unselectedwronganswersmax;
		this.rightdistancemin = rightdistancemin;
		this.rightdistancemax = rightdistancemax;
		this.position = position;
		this.resourceWidth = resourceWidth;
		this.resourceHeight = resourceHeight;
	}

	@Id
	@GeneratedValue(generator="feedbacks_id_seq", strategy=GenerationType.AUTO)
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_question")
	public Question getQuestion() {
		return this.question;
	}

	public void setQuestion(Question question) {
		this.question = question;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_resource")
	public Resource getResource() {
		return this.resource;
	}

	public void setResource(Resource resource) {
		this.resource = resource;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_type")
	public FeedbackType getFeedbackType() {
		return this.feedbackType;
	}

	public void setFeedbackType(FeedbackType feedbackType) {
		this.feedbackType = feedbackType;
	}
	
	@Column(name = "text")
	public String getText() {
		return this.text;
	}

	public void setText(String text) {
		this.text = text;
	}

	@Column(name = "test", nullable = false)
	public String getTest() {
		return this.test;
	}

	public void setTest(String test) {
		this.test = test;
	}

	@Column(name = "answer")
	public String getAnswer() {
		return this.answer;
	}

	public void setAnswer(String answer) {
		this.answer = answer;
	}

	@Column(name = "attemptsmin", nullable = false)
	public int getAttemptsmin() {
		return this.attemptsmin;
	}

	public void setAttemptsmin(int attemptsmin) {
		this.attemptsmin = attemptsmin;
	}

	@Column(name = "attemptsmax", nullable = false)
	public int getAttemptsmax() {
		return this.attemptsmax;
	}

	public void setAttemptsmax(int attemptsmax) {
		this.attemptsmax = attemptsmax;
	}

	@Column(name = "selectedanswersmin", nullable = false)
	public int getSelectedanswersmin() {
		return this.selectedanswersmin;
	}

	public void setSelectedanswersmin(int selectedanswersmin) {
		this.selectedanswersmin = selectedanswersmin;
	}

	@Column(name = "selectedanswersmax", nullable = false)
	public int getSelectedanswersmax() {
		return this.selectedanswersmax;
	}

	public void setSelectedanswersmax(int selectedanswersmax) {
		this.selectedanswersmax = selectedanswersmax;
	}

	@Column(name = "selectedrightanswersmin", nullable = false)
	public int getSelectedrightanswersmin() {
		return this.selectedrightanswersmin;
	}

	public void setSelectedrightanswersmin(int selectedrightanswersmin) {
		this.selectedrightanswersmin = selectedrightanswersmin;
	}

	@Column(name = "selectedrightanswersmax", nullable = false)
	public int getSelectedrightanswersmax() {
		return this.selectedrightanswersmax;
	}

	public void setSelectedrightanswersmax(int selectedrightanswersmax) {
		this.selectedrightanswersmax = selectedrightanswersmax;
	}

	@Column(name = "selectedwronganswersmin", nullable = false)
	public int getSelectedwronganswersmin() {
		return this.selectedwronganswersmin;
	}

	public void setSelectedwronganswersmin(int selectedwronganswersmin) {
		this.selectedwronganswersmin = selectedwronganswersmin;
	}

	@Column(name = "selectedwronganswersmax", nullable = false)
	public int getSelectedwronganswersmax() {
		return this.selectedwronganswersmax;
	}

	public void setSelectedwronganswersmax(int selectedwronganswersmax) {
		this.selectedwronganswersmax = selectedwronganswersmax;
	}

	@Column(name = "unselectedanswersmin", nullable = false)
	public int getUnselectedanswersmin() {
		return this.unselectedanswersmin;
	}

	public void setUnselectedanswersmin(int unselectedanswersmin) {
		this.unselectedanswersmin = unselectedanswersmin;
	}

	@Column(name = "unselectedanswersmax", nullable = false)
	public int getUnselectedanswersmax() {
		return this.unselectedanswersmax;
	}

	public void setUnselectedanswersmax(int unselectedanswersmax) {
		this.unselectedanswersmax = unselectedanswersmax;
	}

	@Column(name = "unselectedrightanswersmin", nullable = false)
	public int getUnselectedrightanswersmin() {
		return this.unselectedrightanswersmin;
	}

	public void setUnselectedrightanswersmin(int unselectedrightanswersmin) {
		this.unselectedrightanswersmin = unselectedrightanswersmin;
	}

	@Column(name = "unselectedrightanswersmax", nullable = false)
	public int getUnselectedrightanswersmax() {
		return this.unselectedrightanswersmax;
	}

	public void setUnselectedrightanswersmax(int unselectedrightanswersmax) {
		this.unselectedrightanswersmax = unselectedrightanswersmax;
	}

	@Column(name = "unselectedwronganswersmin", nullable = false)
	public int getUnselectedwronganswersmin() {
		return this.unselectedwronganswersmin;
	}

	public void setUnselectedwronganswersmin(int unselectedwronganswersmin) {
		this.unselectedwronganswersmin = unselectedwronganswersmin;
	}

	@Column(name = "unselectedwronganswersmax", nullable = false)
	public int getUnselectedwronganswersmax() {
		return this.unselectedwronganswersmax;
	}

	public void setUnselectedwronganswersmax(int unselectedwronganswersmax) {
		this.unselectedwronganswersmax = unselectedwronganswersmax;
	}

	@Column(name = "rightdistancemin", nullable = false)
	public int getRightdistancemin() {
		return this.rightdistancemin;
	}

	public void setRightdistancemin(int rightdistancemin) {
		this.rightdistancemin = rightdistancemin;
	}

	@Column(name = "rightdistancemax", nullable = false)
	public int getRightdistancemax() {
		return this.rightdistancemax;
	}

	public void setRightdistancemax(int rightdistancemax) {
		this.rightdistancemax = rightdistancemax;
	}

	@Column(name = "position", nullable = false)
	public int getPosition() {
		return this.position;
	}

	public void setPosition(int position) {
		this.position = position;
	}

	@Column(name = "resource_width", nullable = false)
	public int getResourceWidth() {
		return this.resourceWidth;
	}

	public void setResourceWidth(int resourceWidth) {
		this.resourceWidth = resourceWidth;
	}

	@Column(name = "resource_height", nullable = false)
	public int getResourceHeight() {
		return this.resourceHeight;
	}

	public void setResourceHeight(int resourceHeight) {
		this.resourceHeight = resourceHeight;
	}
	
	/**
	 * Set the fields of this feedback with the values from fields from other feedback.
	 * @param otherFeedback Other feedback
	 */
	@Transient
	public void setFromOtherFeedback(Feedback otherFeedback)
	{
		if (otherFeedback!=null)
		{
			setId(otherFeedback.getId());
			setQuestion(otherFeedback.getQuestion());
			setResource(otherFeedback.getResource());
			setFeedbackType(otherFeedback.getFeedbackType());
			setText(otherFeedback.getText());
			setTest(otherFeedback.getTest());
			setAnswer(otherFeedback.getAnswer());
			setAttemptsmin(otherFeedback.getAttemptsmin());
			setAttemptsmax(otherFeedback.getAttemptsmax());
			setSelectedanswersmin(otherFeedback.getSelectedanswersmin());
			setSelectedanswersmax(otherFeedback.getSelectedanswersmax());
			setSelectedrightanswersmin(otherFeedback.getSelectedanswersmin());
			setSelectedrightanswersmax(otherFeedback.getSelectedanswersmax());
			setSelectedwronganswersmin(otherFeedback.getSelectedwronganswersmin());
			setSelectedwronganswersmax(otherFeedback.getSelectedwronganswersmax());
			setUnselectedanswersmin(otherFeedback.getUnselectedanswersmin());
			setUnselectedanswersmax(otherFeedback.getUnselectedanswersmax());
			setUnselectedrightanswersmin(otherFeedback.getUnselectedrightanswersmin());
			setUnselectedrightanswersmax(otherFeedback.getUnselectedrightanswersmax());
			setUnselectedwronganswersmin(otherFeedback.getUnselectedwronganswersmin());
			setUnselectedwronganswersmax(otherFeedback.getUnselectedwronganswersmax());
			setRightdistancemin(otherFeedback.getRightdistancemin());
			setRightdistancemax(otherFeedback.getRightdistancemax());
			setPosition(otherFeedback.getPosition());
			setResourceWidth(otherFeedback.getResourceWidth());
			setResourceHeight(otherFeedback.getResourceHeight());
		}
	}
	
	/**
	 * @return A copy of this feedback.
	 */
	@Transient
	public Feedback getFeedbackCopy()
	{
		return new Feedback(getId(),getQuestion(),getResource(),getFeedbackType(),getText(),getTest(),getAnswer(),
			getAttemptsmin(),getAttemptsmax(),getSelectedanswersmin(),getSelectedanswersmax(),
			getSelectedrightanswersmin(),getSelectedrightanswersmax(),getSelectedwronganswersmin(),
			getSelectedwronganswersmax(),getUnselectedanswersmin(),getUnselectedanswersmax(),
			getUnselectedrightanswersmin(),getUnselectedrightanswersmax(),getUnselectedwronganswersmin(),
			getUnselectedwronganswersmax(),getRightdistancemin(),getRightdistancemax(),getPosition(),getResourceWidth(),
			getResourceHeight());
	}
	
	/**
	 * @return OM feedback component identifier
	 */
	@Transient
	public String getOmId()
	{
		StringBuffer omId=new StringBuffer("feedback");
		omId.append(getPosition());
		return omId.toString();
	}
	
	@Override
	public boolean equals(Object obj)
	{
		boolean ok=false;
		if (obj instanceof Feedback)
		{
			if (getId()==0L)
			{
				if (getQuestion()==null)
				{
					ok=((Feedback)obj).getId()==0L && ((Feedback)obj).getQuestion()==null && 
						getPosition()==((Feedback)obj).getPosition();
				}
				else
				{
					ok=((Feedback)obj).getId()==0L && 
						getQuestion().equals(((Feedback)obj).getQuestion()) && 
						getPosition()==((Feedback)obj).getPosition();
				}
			}
			else
			{
				ok=getId()==((Feedback)obj).getId();
			}
		}
		return ok;
	}
}
