/* OpenMark Authoring Tool (GEPEQ)
 * Copyright (C) 2013 UNED
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
package es.uned.lsi.gepec.model.entities;

// Generated 08-jul-2011 10:08:42 by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * UserType generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@SequenceGenerator(name="usertypes_id_seq", sequenceName="usertypes_id_seq") 
@Table(name = "usertypes", schema = "public")
public class UserType implements java.io.Serializable {

	private long id;
	private String type;
	private String description;
	private List<UserTypePermission> userTypePermissions = new ArrayList<UserTypePermission>(0);

	public UserType() {
	}

	public UserType(long id, String type) {
		this(id, type, null);
	}

	public UserType(long id, String type, String description) {
		this.id = id;
		this.type = type;
		this.description = description;
	}

	@Id
	@GeneratedValue(generator="usertypes_id_seq", strategy=GenerationType.AUTO)
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Column(name = "type", unique = true, nullable = false, length = 25)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userType", cascade = CascadeType.ALL)
	public List<UserTypePermission> getUserTypePermissions() {
		return this.userTypePermissions;
	}

	public void setUserTypePermissions(List<UserTypePermission> userTypePermissions) {
		this.userTypePermissions = userTypePermissions;
	}

	/**
	 * Set the fields of this user type with the values from fields from other user type.
	 * @param otherUserType Other user type
	 */
	@Transient
	public void setFromOtherUserType(UserType otherUserType)
	{
		if (otherUserType!=null)
		{
			setId(otherUserType.getId());
			setType(otherUserType.getType());
			setDescription(otherUserType.getDescription());
		}
	}
	
	/**
	 * @return A copy of this user type.
	 */
	@Transient
	public UserType getUserTypeCopy()
	{
		return new UserType(getId(),getType(),getDescription());
	}
	
	@Override
	public boolean equals(Object obj)
	{
		return obj instanceof UserType && getId()==((UserType)obj).getId();
	}
}
