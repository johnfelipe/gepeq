/* OpenMark Authoring Tool (GEPEQ)
 * Copyright (C) 2013 UNED
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
package es.uned.lsi.gepec.model.entities;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Question_truefalse generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name="questions_truefalse",schema="public")
@PrimaryKeyJoinColumn(name="id_question")
public class TrueFalseQuestion extends Question
{
	private boolean correctAnswer;
	private String trueText;
	private String falseText;
	
	public TrueFalseQuestion()
	{
		super();
		this.correctAnswer=true;
		this.type="TRUE_FALSE";
	}
	
	public TrueFalseQuestion(boolean correctAnswer)
	{
		super();
		this.correctAnswer=correctAnswer;
	}
	
	public TrueFalseQuestion(boolean correctAnswer,String trueText,String falseText)
	{
		super();
		this.correctAnswer=correctAnswer;
		this.trueText=trueText;
		this.falseText=falseText;
	}
	
	@Column(name = "correct_answer", nullable = false)
	public boolean getCorrectAnswer()
	{
		return this.correctAnswer;
	}
	
	public void setCorrectAnswer(boolean correctAnswer)
	{
		this.correctAnswer=correctAnswer;
	}
	
	@Column(name = "true_text", length = 25)
	public String getTrueText() {
		return this.trueText;
	}

	public void setTrueText(String trueText) {
		this.trueText = trueText;
	}

	@Column(name = "false_text", length = 25)
	public String getFalseText() {
		return this.falseText;
	}

	public void setFalseText(String falseText) {
		this.falseText = falseText;
	}

	@Transient
	@Override
	public void setFromOtherQuestion(Question otherQuestion)
	{
		super.setFromOtherQuestion(otherQuestion);
		if (otherQuestion instanceof TrueFalseQuestion)
		{
			setCorrectAnswer(((TrueFalseQuestion)otherQuestion).getCorrectAnswer());
			setTrueText(((TrueFalseQuestion)otherQuestion).getTrueText());
			setFalseText(((TrueFalseQuestion)otherQuestion).getFalseText());
		}
	}
	
	@Transient
	@Override
	public Question getQuestionCopy()
	{
		TrueFalseQuestion trueFalseQuestion=new TrueFalseQuestion(getCorrectAnswer(), getTrueText(), getFalseText());
		trueFalseQuestion.setId(getId());
		trueFalseQuestion.setVersion(getVersion());
		trueFalseQuestion.setCategory(getCategory());
		trueFalseQuestion.setResource(getResource());
		trueFalseQuestion.setCorrectFeedbackResource(getCorrectFeedbackResource());
		trueFalseQuestion.setIncorrectFeedbackResource(getIncorrectFeedbackResource());
		trueFalseQuestion.setPassFeedbackResource(getPassFeedbackResource());
		trueFalseQuestion.setFinalFeedbackResource(getFinalFeedbackResource());
		trueFalseQuestion.setName(getName());
		trueFalseQuestion.setQuestionText(getQuestionText());
		trueFalseQuestion.setType(getType());
		trueFalseQuestion.setCreatedBy(getCreatedBy());
		trueFalseQuestion.setModifiedBy(getModifiedBy());
		trueFalseQuestion.setTimecreated(getTimecreated());
		trueFalseQuestion.setTimemodified(getTimemodified());
		trueFalseQuestion.setTimebuild(getTimebuild());
		trueFalseQuestion.setTimedeploy(getTimedeploy());
		trueFalseQuestion.setTimepublished(getTimepublished());
		trueFalseQuestion.setCorrectFeedback(getCorrectFeedback());
		trueFalseQuestion.setIncorrectFeedback(getIncorrectFeedback());
		trueFalseQuestion.setStillFeedback(getStillFeedback());
		trueFalseQuestion.setPassFeedback(getPassFeedback());
		trueFalseQuestion.setAnswerFeedback(getAnswerFeedback());
		trueFalseQuestion.setLevel(getLevel());
		trueFalseQuestion.setResourceWidth(getResourceWidth());
		trueFalseQuestion.setResourceHeight(getResourceHeight());
		trueFalseQuestion.setCorrectFeedbackResourceWidth(getCorrectFeedbackResourceWidth());
		trueFalseQuestion.setCorrectFeedbackResourceHeight(getCorrectFeedbackResourceHeight());
		trueFalseQuestion.setIncorrectFeedbackResourceWidth(getIncorrectFeedbackResourceWidth());
		trueFalseQuestion.setIncorrectFeedbackResourceHeight(getIncorrectFeedbackResourceHeight());
		trueFalseQuestion.setPassFeedbackResourceWidth(getPassFeedbackResourceWidth());
		trueFalseQuestion.setPassFeedbackResourceHeight(getPassFeedbackResourceHeight());
		trueFalseQuestion.setFinalFeedbackResourceWidth(getFinalFeedbackResourceWidth());
		trueFalseQuestion.setFinalFeedbackResourceHeight(getFinalFeedbackResourceHeight());
		trueFalseQuestion.setDisplayEquations(isDisplayEquations());
		return trueFalseQuestion;
	}
}
