/* OpenMark Authoring Tool (GEPEQ)
 * Copyright (C) 2013 UNED
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
package es.uned.lsi.gepec.model.entities;

// Generated 08-jul-2011 10:08:42 by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@SequenceGenerator(name="users_id_seq", sequenceName="users_id_seq") 
@Table(name = "users", schema = "public", uniqueConstraints = {
		@UniqueConstraint(columnNames = "login"),
		@UniqueConstraint(columnNames = "oucu") })
public class User implements java.io.Serializable {

	private long id;
	private UserType userType;
	private String login;
	private String password;
	private String nick;
	private String name;
	private String surname;
	private boolean gepeqUser;
	private String oucu;
	private String groups;
	private List<UserPermission> userPermissions = new ArrayList<UserPermission>(0);
	
	public User() {
	}

	public User(long id, UserType userType, String login, String password, 
			String nick, boolean gepeqUser,String groups) {
		this(id, userType, login, password, nick, "", "", gepeqUser, groups);
	}

	public User(long id, UserType userType, String login, String password, 
			String nick, String name, String surname, boolean gepeqUser, String groups) {
		this.id = id;
		this.userType = userType;
		this.login = login;
		this.password = password;
		this.nick = nick;
		this.name = name;
		this.surname = surname;
		this.gepeqUser = gepeqUser;
		this.oucu = null;
		this.groups = groups;
	}

	@Id
	@GeneratedValue(generator="users_id_seq", strategy=GenerationType.AUTO)
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_type")
	public UserType getUserType() {
		return this.userType;
	}

	public void setUserType(UserType userType) {
		this.userType = userType;
	}

	@Column(name = "login", unique = true, nullable = false, length = 15)
	public String getLogin() {
		return this.login;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	@Column(name = "password", nullable = false, length = 100)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "nick", nullable = false, length = 15)
	public String getNick() {
		return this.nick;
	}

	public void setNick(String nick) {
		this.nick = nick;
	}

	@Column(name = "name", length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "surname", length = 80)
	public String getSurname() {
		return this.surname;
	}

	public void setSurname(String surname) {
		this.surname = surname;
	}

	@Column(name = "gepeq_user", nullable = false)
	public boolean isGepeqUser() {
		return this.gepeqUser;
	}

	public void setGepeqUser(boolean gepeqUser) {
		this.gepeqUser = gepeqUser;
	}

	@Column(name = "oucu", unique = true, nullable = false, length = 8)
	public String getOucu() {
		return this.oucu;
	}

	public void setOucu(String oucu) {
		this.oucu = oucu;
	}

	@Column(name = "groups")
	public String getGroups() {
		return this.groups;
	}

	public void setGroups(String groups) {
		this.groups = groups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user", cascade = CascadeType.ALL)
	public List<UserPermission> getUserPermissions() {
		return this.userPermissions;
	}

	public void setUserPermissions(List<UserPermission> userPermissions) {
		this.userPermissions = userPermissions;
	}

	/**
	 * @return Both name and surname in a single string
	 */
	@Transient
	public String getLongName()
	{
		StringBuffer longName=new StringBuffer();
		if (getName()!=null)
		{
			longName.append(getName());
		}
		if (getSurname()!=null)
		{
			if (longName.length()>0)
			{
				longName.append(' ');
			}
			longName.append(getSurname());
		}
		return longName.toString();
	}
	
	/**
	 * Set the fields of this user with the values from fields from other user.
	 * @param otherUser Other user
	 */
	@Transient
	public void setFromOtherUser(User otherUser)
	{
		if (otherUser!=null)
		{
			setId(otherUser.getId());
			setUserType(otherUser.getUserType());
			setLogin(otherUser.getLogin());
			setPassword(otherUser.getPassword());
			setNick(otherUser.getNick());
			setName(otherUser.getName());
			setSurname(otherUser.getSurname());
			setGepeqUser(otherUser.isGepeqUser());
			setOucu(otherUser.getOucu());
			setGroups(otherUser.getGroups());
		}
	}
	
	/**
	 * @return A copy of this user.
	 */
	@Transient
	public User getUserCopy()
	{
		User userCopy=new User(getId(),getUserType(),getLogin(),getPassword(),getNick(),getName(),getSurname(),
			isGepeqUser(),getGroups());
		userCopy.setOucu(getOucu());
		return userCopy;
	}
	
	@Override
	public boolean equals(Object obj)
	{
		return obj instanceof User && getId()==((User)obj).getId();
	}
}
