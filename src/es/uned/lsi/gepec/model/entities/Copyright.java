/* OpenMark Authoring Tool (GEPEQ)
 * Copyright (C) 2013 UNED
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
package es.uned.lsi.gepec.model.entities;

//Generated 06-jun-2012 10:17:53 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Copyrights generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@SequenceGenerator(name="copyrights_id_seq", sequenceName="copyrights_id_seq") 
@Table(name = "copyrights", schema = "public")
public class Copyright implements java.io.Serializable {

	private long id;
	private String copyright;
	private Set<Resource> resources = new HashSet<Resource>(0);

	public Copyright() {
	}

	public Copyright(long id) {
		this.id = id;
	}

	public Copyright(long id, String copyright, Set<Resource> resources) {
		this.id = id;
		this.copyright = copyright;
		this.resources = resources;
	}

	@Id
	@GeneratedValue(generator="copyrights_id_seq", strategy=GenerationType.AUTO)
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Column(name = "copyright", length = 100)
	public String getCopyright() {
		return this.copyright;
	}

	public void setCopyright(String copyright) {
		this.copyright = copyright;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "copyright")
	public Set<Resource> getResources() {
		return this.resources;
	}

	public void setResources(Set<Resource> resources) {
		this.resources = resources;
	}

	/**
	 * Set the fields of this copyright with the values from fields from other copyright.
	 * @param otherCopyright Other copyright
	 */
	@Transient
	public void setFromOtherCopyright(Copyright otherCopyright)
	{
		if (otherCopyright!=null)
		{
			setId(otherCopyright.getId());
			setCopyright(otherCopyright.getCopyright());
		}
	}
	
	@Override
	public boolean equals(Object obj)
	{
		return obj instanceof Copyright && getId()==((Copyright)obj).getId();
	}
}
