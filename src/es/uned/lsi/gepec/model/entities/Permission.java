/* OpenMark Authoring Tool (GEPEQ)
 * Copyright (C) 2013 UNED
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
package es.uned.lsi.gepec.model.entities;

//Generated 09-jul-2012 14:56:59 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Permission generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@SequenceGenerator(name="permissions_id_seq", sequenceName="permissions_id_seq") 
@Table(name = "permissions", schema = "public")
public class Permission implements java.io.Serializable {

	private long id;
	private PermissionType permissionType;
	private String name;
	private String defaultValue;

	public Permission() {
	}

	public Permission(long id, PermissionType permissionType, String name,
			String defaultValue) {
		this.id = id;
		this.permissionType = permissionType;
		this.name = name;
		this.defaultValue = defaultValue;
	}

	@Id
	@GeneratedValue(generator="permissions_id_seq", strategy=GenerationType.AUTO)
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_type")
	public PermissionType getPermissionType() {
		return this.permissionType;
	}

	public void setPermissionType(PermissionType permissionType) {
		this.permissionType = permissionType;
	}

	@Column(name = "name", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "default_value", nullable = false)
	public String getDefaultValue() {
		return this.defaultValue;
	}

	public void setDefaultValue(String defaultValue) {
		this.defaultValue = defaultValue;
	}

	/**
	 * Set the fields of this permission with the values from fields from other permission.
	 * @param otherPermission Other permission
	 */
	@Transient
	public void setFromOtherPermission(Permission otherPermission)
	{
		if (otherPermission!=null)
		{
			setId(otherPermission.getId());
			setPermissionType(otherPermission.getPermissionType());
			setName(otherPermission.getName());
			setDefaultValue(otherPermission.getDefaultValue());
		}
	}
	
	/**
	 * @return A copy of this permission.
	 */
	@Transient
	public Permission getPermissionCopy()
	{
		return new Permission(getId(),getPermissionType(),getName(),getDefaultValue());
	}
	
	@Override
	public boolean equals(Object obj)
	{
		return obj instanceof Permission && getId()==((Permission)obj).getId();
	}
}
